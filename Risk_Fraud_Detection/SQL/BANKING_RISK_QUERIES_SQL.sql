CREATE TABLE DEBIT_CREDIT_TRANSACTION(
	CUST_ID VARCHAR(100),
    CUST_NAME VARCHAR(100),
    ACC_NO VARCHAR(100),
    DATES VARCHAR(100),
    TYP varchar(10),
    AMOUNT VARCHAR(100),
    BALANCE VARCHAR(100),
    DESCR VARCHAR(100),
    BRANCH VARCHAR(100),
    METHOD VARCHAR(100),
    CURRENCY VARCHAR(10),
    BANK VARCHAR(100));
    
    LOAD DATA INFILE "C:\ProgramData\MySQL\MySQL Server 8.0\Uploads\Debit and Credit bankings_data.csv"
INTO TABLE cleaned_banking_data
FIELDS TERMINATED BY ',' 
ENCLOSED BY '"'
LINES TERMINATED BY '\r\n'
IGNORE 1 ROWS;
show variables like 'secure_file_priv';
show variables like 'local_infile';
LOAD DATA INFILE 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/Debit and Credit bankings_data.csv'
INTO TABLE DEBIT_CREDIT_TRANSACTION
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\r\n'
IGNORE 1 ROWS;

SELECT * FROM debit_credit_transaction;
## DATA CLEANING 
SELECT CUST_ID,COUNT(*) FROM debit_credit_transaction GROUP BY CUST_ID HAVING COUNT(*)>1;
ALTER TABLE debit_credit_transaction ADD COLUMN CUST_CODE VARCHAR(10);
UPDATE DEBIT_CREDIT_TRANSACTION SET CUST_CODE= UPPER(left(CUST_ID,8));
SELECT CUST_NAME FROM debit_credit_transaction WHERE CUST_NAME IS NULL OR CUST_NAME="";
UPDATE debit_credit_transaction SET CUST_NAME= UPPER(TRIM(CUST_NAME));
SELECT ACC_NO FROM debit_credit_transaction WHERE ACC_NO  IS NULL OR ACC_NO="";
SELECT ACC_NO FROM debit_credit_transaction;
ALTER TABLE debit_credit_transaction MODIFY COLUMN ACC_NO BIGINT;
SELECT DATES FROM debit_credit_transaction;
ALTER TABLE debit_credit_transaction MODIFY COLUMN DATES date;
SELECT TYP FROM debit_credit_transaction;
SELECT TYP FROM debit_credit_transaction WHERE TYP IS NULL OR TYP="";
ALTER TABLE debit_credit_transaction CHANGE  TYP TYPES VARCHAR(10);
SELECT AMOUNT FROM debit_credit_transaction;
ALTER TABLE debit_credit_transaction MODIFY COLUMN AMOUNT DECIMAL(20,2);
SELECT COUNT(*) BALANCE FROM debit_credit_transaction WHERE BALANCE IS NULL AND BALANCE= 0;
ALTER TABLE debit_credit_transaction MODIFY COLUMN BALANCE DECIMAL(20,2);
SELECT COUNT(*) DESCR FROM debit_credit_transaction WHERE DESCR IS NULL AND DESCR="";
UPDATE DEBIT_CREDIT_TRANSACTION SET DESCR= upper(TRIM(DESCR));
SELECT BRANCH FROM debit_credit_transaction ;
UPDATE DEBIT_CREDIT_TRANSACTION SET BRANCH = upper(TRIM(BRANCH));
SELECT  METHOD FROM debit_credit_transaction;
UPDATE DEBIT_CREDIT_TRANSACTION SET METHOD= UPPER(TRIM(METHOD));
SELECT CURRENCY FROM debit_credit_transaction;
ALTER TABLE debit_credit_transaction DROP COLUMN CURRENCY;
SELECT BANK FROM debit_credit_transaction;
UPDATE DEBIT_CREDIT_TRANSACTION SET BANK= UPPER(TRIM(BANK));
SELECT CUST_CODE FROM debit_credit_transaction;
-- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------

## KPI 1 TOTAL CREDIT AMOUNT
SELECT CONCAT('₹',ROUND(SUM(AMOUNT)/1000000,2),"" "M") AS TOTAL_CREDIT_AMOUNT FROM debit_credit_transaction WHERE TYPES="CREDIT";

## KPI 2 TOTAL DEBIT AMOUNT
SELECT CONCAT('₹',ROUND(SUM(AMOUNT)/1000000,2),"" "M") AS TOTAL_DEBIT_AMOUNT FROM debit_credit_transaction WHERE TYPES="DEBIT";

## KPI 3 CREDIT TO DEBIT RATIO
SELECT 
ROUND(
(SUM(CASE WHEN TYPES='CREDIT' THEN AMOUNT ELSE 0 END)/
SUM(CASE WHEN TYPES='DEBIT' THEN AMOUNT ELSE 0 END ))*100,2 )AS CREDIT_TO_DEBIT_RATIO FROM DEBIT_CREDIT_TRANSACTION;

## KPI 4 NET TRANSACTION AMOUNT
SELECT CONCAT('₹',ROUND((SUM(CASE WHEN TYPES='CREDIT' THEN AMOUNT ELSE 0 END)-SUM(CASE WHEN TYPES='DEBIT' THEN AMOUNT ELSE 0 END))/1000,2),"" "K")
AS NET_TRANSACTION_AMOUNT FROM debit_credit_transaction;

## KPI 5 ACCOUNT ACTIVITY RATIO
SELECT  ROUND(COUNT(*) / AVG(BALANCE),2) AS Account_Activity_Ratio_Percent FROM debit_credit_transaction;

## KPI 6 TRANSACTION PER YEAR/MONTH/WEEK/DAYS
SELECT DATES FROM debit_credit_transaction;
SELECT YEAR(DATES) AS YEARS,monthname(DATES) AS MONTHS,weekday(DATES)AS WEEKS, dayname(DATES) AS DAYS,COUNT(*) AS TRANSACTION_COUNT FROM debit_credit_transaction 
GROUP BY YEARS,MONTHS,WEEKS, DAYS ORDER BY TRANSACTION_COUNT desc ;

## KPI 7 TOTAL TRANSACTION AMOUNT BY BRANCH

SELECT BRANCH,CONCAT('₹',ROUND(SUM(AMOUNT)/1000000,2),"" "M") AS TOTAL_TRANSACTION,
CONCAT(ROUND(COUNT(*) / AVG(BALANCE),2),"%") AS Account_Activity_Ratio_Percent,ROUND(
(SUM(CASE WHEN TYPES='CREDIT' THEN AMOUNT ELSE 0 END)/
SUM(CASE WHEN TYPES='DEBIT' THEN AMOUNT ELSE 0 END ))*100,2 )AS CREDIT_TO_DEBIT_RATIO  FROM debit_credit_transaction 
GROUP BY BRANCH ORDER BY TOTAL_TRANSACTION DESC LIMIT 10;

## KPI 8 TRANSACTION VOLUME BY BANK

SELECT BANK,CONCAT('₹',ROUND(SUM(AMOUNT)/1000000,2),"" "M") AS TOTAL_TRANSACTION,
CONCAT(ROUND(COUNT(*) / AVG(BALANCE),2),"%") AS Account_Activity_Ratio_Percent,ROUND(
(SUM(CASE WHEN TYPES='CREDIT' THEN AMOUNT ELSE 0 END)/
SUM(CASE WHEN TYPES='DEBIT' THEN AMOUNT ELSE 0 END ))*100,2 )AS CREDIT_TO_DEBIT_RATIO  FROM debit_credit_transaction 
GROUP BY BANK ORDER BY TOTAL_TRANSACTION DESC LIMIT 10;

## KPI 9 TRANSACTION METHOD DISTRIBUTION

SELECT METHOD FROM debit_credit_transaction;
SELECT METHOD,COUNT(*) AS TRANSACTION_COUNT,CONCAT(ROUND(SUM(AMOUNT)/1000000,2),"" "M") AS TOTAL_TRANSACTION,  CONCAT(ROUND((SUM(AMOUNT) / (SELECT SUM(AMOUNT) FROM debit_credit_transaction)) * 100, 2),"%") 
 AS PERCENTAGE_AMOUNT  FROM DEBIT_CREDIT_TRANSACTION GROUP BY METHOD ORDER BY PERCENTAGE_AMOUNT DESC;
 
 
 ## KPI 10 BRANCH TRANSACTION GROWTH
 
 SELECT BRANCH,Month,Total_Transaction_Amount,
  ROUND(Total_Transaction_Amount - LAG(Total_Transaction_Amount) OVER (PARTITION BY BRANCH ORDER BY Month),2) AS Growth_Amount,
 concat( ROUND(((Total_Transaction_Amount - LAG(Total_Transaction_Amount) OVER (PARTITION BY BRANCH ORDER BY Month)) /
  NULLIF(LAG(Total_Transaction_Amount) OVER (PARTITION BY BRANCH ORDER BY Month), 0)) * 100, 2),'' '%') AS Growth_Percent
FROM (SELECT BRANCH,DATE_FORMAT(DATES, '%Y-%m-%d') AS Month,CONCAT(ROUND(SUM(AMOUNT)/1000000,2),"" "M") AS Total_Transaction_Amount FROM debit_credit_transaction 
GROUP BY BRANCH, Month) AS branch_month_totals ORDER BY BRANCH, Month;
 
## KPI 11 HIGH RISK VS LOW RISK TRANSACTION FLAG
ALTER TABLE debit_credit_transaction ADD COLUMN RISK_FLAG VARCHAR(20);
UPDATE DEBIT_CREDIT_TRANSACTION SET RISK_FLAG= CASE WHEN AMOUNT>4000 THEN "HIGH-RISK" ELSE "NORMAL" END;

SELECT BANK,BRANCH,DATE_FORMAT(DATES,'%Y-%m-%d') AS MONTHS, COUNT(*) AS High_Risk_Count,CONCAT('₹', ROUND(SUM(AMOUNT)/1000000, 2), ' M') AS HIGH_RISK_TRANSACTION,
CONCAT(ROUND((COUNT(*) / (SELECT COUNT(*) FROM debit_credit_transaction WHERE RISK_FLAG = 'HIGH-RISK')) * 100, 2), ' %') AS RISK_SHARE
FROM debit_credit_transaction WHERE RISK_FLAG = 'HIGH-RISK' GROUP BY BANK,BRANCH,months ORDER BY SUM(AMOUNT) DESC LIMIT 10;

SELECT BANK,BRANCH,DATE_FORMAT(DATES,'%Y-%m-%d') AS MONTHS, COUNT(*) AS NORMAL,CONCAT('₹', ROUND(SUM(AMOUNT)/1000000, 2), ' M') AS NORMAL,
CONCAT(ROUND((COUNT(*) / (SELECT COUNT(*) FROM debit_credit_transaction WHERE RISK_FLAG = 'NORMAL')) * 100, 2), ' %') AS RISK_SHARE
FROM debit_credit_transaction WHERE RISK_FLAG = 'NORMAL' GROUP BY BANK,BRANCH,MONTHS ORDER BY SUM(AMOUNT) DESC LIMIT 10;


## SUSPICIOUS TRANSACTION FREQUENCY
SELECT BANK,BRANCH,DATE_FORMAT(DATES,'%Y-%m-%d') AS MONTHS, COUNT(*) AS suspicious_count,CONCAT('₹', ROUND(SUM(AMOUNT)/1000000, 2), ' M') AS suspicious_amount,
CONCAT(ROUND((COUNT(*) / (SELECT COUNT(*) FROM debit_credit_transaction WHERE RISK_FLAG = 'HIGH')) * 100, 2), ' %') AS RISK_SHARE
FROM debit_credit_transaction WHERE RISK_FLAG = 'HIGH' GROUP BY BANK,BRANCH,MONTHS ORDER BY SUM(AMOUNT) DESC LIMIT 10;


SELECT BANK,BRANCH,DATE_FORMAT(DATES,'%Y-%m-%d') AS MONTHS,
		FORMAT(COUNT(*),0) AS NUMBER_OF_TRANSACTION,
        FORMAT(SUM(CASE WHEN AMOUNT<BALANCE THEN 1 END),0) AS NON_SUSPICIOUS,
        FORMAT(SUM(CASE WHEN TYPES="CREDIT" AND AMOUNT>BALANCE THEN 1 END),0) AS SUSPICIOUS_DEPOSIT,
		FORMAT(SUM(CASE WHEN TYPES="DEBIT" AND AMOUNT>BALANCE THEN 1 END),0) AS SUSPICIOUS_WITHDRAWL
FROM debit_credit_transaction GROUP BY BANK,BRANCH,MONTHS ORDER BY SUSPICIOUS_DEPOSIT desc;

